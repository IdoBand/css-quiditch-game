@use '../../globals.scss' as globals;

$goals-gap: 0.8em;
$goal-color: gold;
$pole-rotate-start: 90deg;

.goals-container {
    position: absolute;
    bottom: -5em;

    &.goals-pos-left {
        transform: rotateY(90deg) translateZ(-10em);
    }
    &.goals-pos-right {
        transform: rotateY(-90deg) translateZ(-10em);
    }
}
@mixin goal-props {
    position: absolute;
    width: 2px;
    bottom: 0;
}

@keyframes rightPoleRotate {
    100% {
        transform: rotateY(-270deg);
    }
}

@keyframes leftPoleRotate {
    100% {
        transform: rotateY(-450deg);
    }
}

.tall-goal {
    @include goal-props;
    height: 3em;
}

.mid-goal {
    @include goal-props;
    height: 2.5em;
    translate: ($goals-gap);
}

.short-goal {
    @include goal-props;
    height: 2em;
    translate: (-$goals-gap);
}

.pole {
    position: absolute;
    background: $goal-color;
    box-shadow: 0 0 1px #000a inset;
    height: 100%;
    width: 100%;
    &.goals-pos-right {
        transform: rotateY($pole-rotate-start);
        &.active {
            animation: rightPoleRotate globals.$rotateSpeed linear infinite;
        }
    }
    &.goals-pos-left {
        transform: rotateY(-$pole-rotate-start);
        &.active {
            animation: leftPoleRotate globals.$rotateSpeed linear infinite;
        }
    }
}

.hoop {
    position: absolute;
    @for $i from 1 to 9 {
        & :nth-child(#{$i}) {
            $translateZ: calc(#{$i} * 0.004em);
            $size: calc(sin(#{$i} * 11.25deg) * 0.004em);
            box-shadow: 0 0 0.3px #000a inset;
            position: absolute;
            inset: -7px;
            border: $size $goal-color solid;
            border-radius: 50%;
            transform: rotateY(0deg) translateZ($translateZ) translateY(-50%);
        }
    }
    &.back {
        transform: rotateY(180deg) translateZ(-1px);
    }
}